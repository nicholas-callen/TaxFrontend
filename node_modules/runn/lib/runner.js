'use strict';

/**
 *	Fire off the middleware for the run
 *	@param {Object} data
 *	@param {Function} cb	
 */
module.exports = function(data, cb) {
	var before = this.beforestack,
		after = this.afterstack,
		middle = this.middlestack,
		me = this;

	this.data = data;

	runner.call(this, before, function(err, data){
		if (err) return cb(true);

		runner.call(me, middle, function(err, data){
			if (err) return cb(true);

			runner.call(me, after, function(err, data){
				return cb(err ? true : false, data);
			});
		});
	});
};

/**
 *	Execute an array of functions with callbacks
 *	@param {Array} fns
 *	@param {Function} cb
 */
function runner(fns, cb) {
	if (!fns) return cb(false, this.data);

	var fn = fns.pop(),
		me = this;

	if (!fn) return cb(false, this.data);

	fn(this.data, function(err){
		if (err || !fns.length) return cb(err, me.data);
		runner.call(me, fns, cb);
	});
};
